{"ast":null,"code":"var _jsxFileName = \"/home/falconexlover/desk/lesnoy dvorik/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Проверяем, есть ли сохраненный пользователь\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Загрузка профиля пользователя\n  const loadUserProfile = async () => {\n    try {\n      setLoading(true);\n      const response = await authService.getProfile();\n      const userData = response.data;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setError(null);\n    } catch (err) {\n      setError('Ошибка загрузки профиля');\n      console.error('Ошибка загрузки профиля:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Регистрация пользователя\n  const register = async userData => {\n    try {\n      setLoading(true);\n      await authService.register(userData);\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Ошибка при регистрации');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Вход пользователя\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await authService.login(credentials);\n      const {\n        token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Ошибка при входе');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Выход пользователя\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // Обновление профиля\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(userData);\n      const updatedUser = response.data.user;\n      setUser(prevUser => ({\n        ...prevUser,\n        ...updatedUser\n      }));\n      localStorage.setItem('user', JSON.stringify({\n        ...user,\n        ...updatedUser\n      }));\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Ошибка при обновлении профиля');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Изменение пароля\n  const changePassword = async passwords => {\n    try {\n      setLoading(true);\n      await authService.changePassword(passwords);\n      setError(null);\n      return true;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Ошибка при изменении пароля');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    loadUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","token","JSON","parse","loadUserProfile","response","getProfile","userData","data","setItem","stringify","err","console","register","_err$response","_err$response$data","message","login","credentials","_err$response2","_err$response2$data","logout","removeItem","updateProfile","updatedUser","prevUser","_err$response3","_err$response3$data","changePassword","passwords","_err$response4","_err$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/falconexlover/desk/lesnoy dvorik/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Проверяем, есть ли сохраненный пользователь\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n\n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n    }\n    \n    setLoading(false);\n  }, []);\n\n  // Загрузка профиля пользователя\n  const loadUserProfile = async () => {\n    try {\n      setLoading(true);\n      const response = await authService.getProfile();\n      const userData = response.data;\n      \n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setError(null);\n    } catch (err) {\n      setError('Ошибка загрузки профиля');\n      console.error('Ошибка загрузки профиля:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Регистрация пользователя\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      await authService.register(userData);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Ошибка при регистрации');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Вход пользователя\n  const login = async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(credentials);\n      const { token, user: userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      setUser(userData);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Ошибка при входе');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Выход пользователя\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // Обновление профиля\n  const updateProfile = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(userData);\n      const updatedUser = response.data.user;\n      \n      setUser(prevUser => ({ ...prevUser, ...updatedUser }));\n      localStorage.setItem('user', JSON.stringify({ ...user, ...updatedUser }));\n      \n      setError(null);\n      return true;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Ошибка при обновлении профиля');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Изменение пароля\n  const changePassword = async (passwords) => {\n    try {\n      setLoading(true);\n      await authService.changePassword(passwords);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Ошибка при изменении пароля');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    loadUserProfile\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}